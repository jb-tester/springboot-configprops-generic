## we are always trying to find the proper class type for the properties of Class<somthing> type:
my.generic.props.pojo-list[0].of-foo.t.id=some foo
my.generic.props.pojo-list[0].of-foo-children.t.id=another foo
my.generic.props.pojo-list[0].of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.FooImpl1
my.generic.props.pojo-list[0].of-generic-type-class=java.util.List
my.generic.props.pojo-list[0].of-string-collection-class=java.util.List
my.generic.props.pojo-list[0].of-generic-of-object-class=com.mytests.spring.springbootconfigpropsgeneric.MyClass
my.generic.props.pojo-list[0].of-generic-of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.MyClass

my.generic.props.pojo-list[1].of-foo.t.id=some bar
my.generic.props.pojo-list[1].of-foo-children.t.id=another bar
my.generic.props.pojo-list[1].of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.FooImpl2
my.generic.props.pojo-list[1].of-generic-type-class=java.util.Set
my.generic.props.pojo-list[1].of-string-collection-class=java.util.Set
my.generic.props.pojo-list[1].of-generic-of-object-class=com.mytests.spring.springbootconfigpropsgeneric.MyClass2
my.generic.props.pojo-list[1].of-generic-of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.MyClass2

## what if we use any class at all for different Class<whatever> property populating? no errors are reported!
my.generic.props.pojo-list[2].of-foo.t.id=some boo
my.generic.props.pojo-list[2].of-foo-children.t.id=another boo
my.generic.props.pojo-list[2].of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.JustClass
my.generic.props.pojo-list[2].of-generic-type-class=com.mytests.spring.springbootconfigpropsgeneric.JustClass
my.generic.props.pojo-list[2].of-string-collection-class=com.mytests.spring.springbootconfigpropsgeneric.JustClass
my.generic.props.pojo-list[2].of-generic-of-object-class=com.mytests.spring.springbootconfigpropsgeneric.JustClass
my.generic.props.pojo-list[2].of-generic-of-foo-class=com.mytests.spring.springbootconfigpropsgeneric.JustClass



